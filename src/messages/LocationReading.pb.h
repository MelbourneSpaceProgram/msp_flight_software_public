/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Sat Sep 22 20:28:34 2018. */

#ifndef PB_LOCATIONREADING_PB_H_INCLUDED
#define PB_LOCATIONREADING_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _LocationReading {
    double lattitude_geodetic_degrees;
    double longitude_degrees;
    double altitude_above_ellipsoid_km;
    uint64_t timestamp_ms;
/* @@protoc_insertion_point(struct:LocationReading) */
} LocationReading;

/* Default values for struct fields */
extern const double LocationReading_lattitude_geodetic_degrees_default;
extern const double LocationReading_longitude_degrees_default;
extern const double LocationReading_altitude_above_ellipsoid_km_default;
extern const uint64_t LocationReading_timestamp_ms_default;

/* Initializer values for message structs */
#define LocationReading_init_default             {-9999, -9999, -9999, 0ull}
#define LocationReading_init_zero                {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define LocationReading_lattitude_geodetic_degrees_tag 1
#define LocationReading_longitude_degrees_tag    2
#define LocationReading_altitude_above_ellipsoid_km_tag 3
#define LocationReading_timestamp_ms_tag         4

/* Struct field encoding specification for nanopb */
extern const pb_field_t LocationReading_fields[5];

/* Maximum encoded size of messages (where known) */
#define LocationReading_size                     36

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LOCATIONREADING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

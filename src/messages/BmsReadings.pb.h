/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Sun Sep 23 17:59:39 2018. */

#ifndef PB_BMSREADINGS_PB_H_INCLUDED
#define PB_BMSREADINGS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _BmsReadings_SystemStatus {
    BmsReadings_SystemStatus_kChargeDisable = 0,
    BmsReadings_SystemStatus_kChargeEnable = 1
} BmsReadings_SystemStatus;
#define _BmsReadings_SystemStatus_MIN BmsReadings_SystemStatus_kChargeDisable
#define _BmsReadings_SystemStatus_MAX BmsReadings_SystemStatus_kChargeEnable
#define _BmsReadings_SystemStatus_ARRAYSIZE ((BmsReadings_SystemStatus)(BmsReadings_SystemStatus_kChargeEnable+1))

typedef enum _BmsReadings_ChargerState {
    BmsReadings_ChargerState_kBigShortFault = 1,
    BmsReadings_ChargerState_kBatMissingFault = 2,
    BmsReadings_ChargerState_kMaxChargeTimeFault = 4,
    BmsReadings_ChargerState_kCOverXTerm = 8,
    BmsReadings_ChargerState_kTimerTerm = 16,
    BmsReadings_ChargerState_kNtcPause = 32,
    BmsReadings_ChargerState_kCcCvCharge = 64,
    BmsReadings_ChargerState_kPrecharge = 128,
    BmsReadings_ChargerState_kChargerSuspended = 256,
    BmsReadings_ChargerState_kAbsorbCharge = 512,
    BmsReadings_ChargerState_kEqualizeCharge = 1024,
    BmsReadings_ChargerState_kInvalidChargerState = 65535
} BmsReadings_ChargerState;
#define _BmsReadings_ChargerState_MIN BmsReadings_ChargerState_kBigShortFault
#define _BmsReadings_ChargerState_MAX BmsReadings_ChargerState_kInvalidChargerState
#define _BmsReadings_ChargerState_ARRAYSIZE ((BmsReadings_ChargerState)(BmsReadings_ChargerState_kInvalidChargerState+1))

typedef enum _BmsReadings_ChargeStatus {
    BmsReadings_ChargeStatus_kConstantVoltage = 0,
    BmsReadings_ChargeStatus_kConstantCurrent = 1,
    BmsReadings_ChargeStatus_kIinLimitActive = 2,
    BmsReadings_ChargeStatus_kVinLimitActive = 3,
    BmsReadings_ChargeStatus_kNotCharging = 4,
    BmsReadings_ChargeStatus_kChargingError = 5
} BmsReadings_ChargeStatus;
#define _BmsReadings_ChargeStatus_MIN BmsReadings_ChargeStatus_kConstantVoltage
#define _BmsReadings_ChargeStatus_MAX BmsReadings_ChargeStatus_kChargingError
#define _BmsReadings_ChargeStatus_ARRAYSIZE ((BmsReadings_ChargeStatus)(BmsReadings_ChargeStatus_kChargingError+1))

/* Struct definitions */
typedef struct _BmsReadings {
    double battery_voltage;
    double battery_current;
    double system_voltage;
    double input_voltage;
    double input_current;
    double die_temperature;
    double battery_temperature;
    uint32_t jeita_region;
    BmsReadings_SystemStatus system_status;
    BmsReadings_ChargerState charger_state;
    BmsReadings_ChargeStatus charge_status;
    double recharge_threshold;
    uint32_t charger_config;
    uint32_t c_over_x_threshold;
    uint32_t v_charge_setting;
    uint32_t i_charge_target;
    uint32_t config_bits;
    uint32_t q_count;
    uint32_t q_count_prescale_factor;
    uint32_t v_in_uvcl_setting;
    double v_charge_dac;
    double i_charge_dac;
    bool telemetry_valid;
    uint64_t timestamp_ms;
/* @@protoc_insertion_point(struct:BmsReadings) */
} BmsReadings;

/* Default values for struct fields */
extern const double BmsReadings_battery_voltage_default;
extern const double BmsReadings_battery_current_default;
extern const double BmsReadings_system_voltage_default;
extern const double BmsReadings_input_voltage_default;
extern const double BmsReadings_input_current_default;
extern const double BmsReadings_die_temperature_default;
extern const double BmsReadings_battery_temperature_default;
extern const uint32_t BmsReadings_jeita_region_default;
extern const BmsReadings_SystemStatus BmsReadings_system_status_default;
extern const BmsReadings_ChargerState BmsReadings_charger_state_default;
extern const BmsReadings_ChargeStatus BmsReadings_charge_status_default;
extern const double BmsReadings_recharge_threshold_default;
extern const uint32_t BmsReadings_charger_config_default;
extern const uint32_t BmsReadings_c_over_x_threshold_default;
extern const uint32_t BmsReadings_v_charge_setting_default;
extern const uint32_t BmsReadings_i_charge_target_default;
extern const uint32_t BmsReadings_config_bits_default;
extern const uint32_t BmsReadings_q_count_default;
extern const uint32_t BmsReadings_q_count_prescale_factor_default;
extern const uint32_t BmsReadings_v_in_uvcl_setting_default;
extern const double BmsReadings_v_charge_dac_default;
extern const double BmsReadings_i_charge_dac_default;
extern const bool BmsReadings_telemetry_valid_default;
extern const uint64_t BmsReadings_timestamp_ms_default;

/* Initializer values for message structs */
#define BmsReadings_init_default                 {-9999, -9999, -9999, -9999, -9999, -9999, -9999, 9999u, BmsReadings_SystemStatus_kChargeDisable, BmsReadings_ChargerState_kInvalidChargerState, BmsReadings_ChargeStatus_kChargingError, -9999, 9999u, 9999u, 9999u, 9999u, 9999u, 9999u, 9999u, 9999u, -9999, -9999, false, 0ull}
#define BmsReadings_init_zero                    {0, 0, 0, 0, 0, 0, 0, 0, _BmsReadings_SystemStatus_MIN, _BmsReadings_ChargerState_MIN, _BmsReadings_ChargeStatus_MIN, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BmsReadings_battery_voltage_tag          1
#define BmsReadings_battery_current_tag          2
#define BmsReadings_system_voltage_tag           3
#define BmsReadings_input_voltage_tag            4
#define BmsReadings_input_current_tag            5
#define BmsReadings_die_temperature_tag          6
#define BmsReadings_battery_temperature_tag      7
#define BmsReadings_jeita_region_tag             8
#define BmsReadings_system_status_tag            9
#define BmsReadings_charger_state_tag            10
#define BmsReadings_charge_status_tag            11
#define BmsReadings_recharge_threshold_tag       12
#define BmsReadings_charger_config_tag           13
#define BmsReadings_c_over_x_threshold_tag       14
#define BmsReadings_v_charge_setting_tag         15
#define BmsReadings_i_charge_target_tag          16
#define BmsReadings_config_bits_tag              17
#define BmsReadings_q_count_tag                  18
#define BmsReadings_q_count_prescale_factor_tag  19
#define BmsReadings_v_in_uvcl_setting_tag        20
#define BmsReadings_v_charge_dac_tag             21
#define BmsReadings_i_charge_dac_tag             22
#define BmsReadings_telemetry_valid_tag          23
#define BmsReadings_timestamp_ms_tag             24

/* Struct field encoding specification for nanopb */
extern const pb_field_t BmsReadings_fields[25];

/* Maximum encoded size of messages (where known) */
#define BmsReadings_size                         172

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BMSREADINGS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

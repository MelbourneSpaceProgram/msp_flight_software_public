/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Wed Sep 26 22:08:12 2018. */

#ifndef PB_BMSCHARGINGINFOREADING_PB_H_INCLUDED
#define PB_BMSCHARGINGINFOREADING_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _BmsChargingInfoReading_SystemStatus {
    BmsChargingInfoReading_SystemStatus_kChargeDisable = 0,
    BmsChargingInfoReading_SystemStatus_kChargeEnable = 1
} BmsChargingInfoReading_SystemStatus;
#define _BmsChargingInfoReading_SystemStatus_MIN BmsChargingInfoReading_SystemStatus_kChargeDisable
#define _BmsChargingInfoReading_SystemStatus_MAX BmsChargingInfoReading_SystemStatus_kChargeEnable
#define _BmsChargingInfoReading_SystemStatus_ARRAYSIZE ((BmsChargingInfoReading_SystemStatus)(BmsChargingInfoReading_SystemStatus_kChargeEnable+1))

typedef enum _BmsChargingInfoReading_ChargerState {
    BmsChargingInfoReading_ChargerState_kBigShortFault = 1,
    BmsChargingInfoReading_ChargerState_kBatMissingFault = 2,
    BmsChargingInfoReading_ChargerState_kMaxChargeTimeFault = 4,
    BmsChargingInfoReading_ChargerState_kCOverXTerm = 8,
    BmsChargingInfoReading_ChargerState_kTimerTerm = 16,
    BmsChargingInfoReading_ChargerState_kNtcPause = 32,
    BmsChargingInfoReading_ChargerState_kCcCvCharge = 64,
    BmsChargingInfoReading_ChargerState_kPrecharge = 128,
    BmsChargingInfoReading_ChargerState_kChargerSuspended = 256,
    BmsChargingInfoReading_ChargerState_kAbsorbCharge = 512,
    BmsChargingInfoReading_ChargerState_kEqualizeCharge = 1024,
    BmsChargingInfoReading_ChargerState_kInvalidChargerState = 65535
} BmsChargingInfoReading_ChargerState;
#define _BmsChargingInfoReading_ChargerState_MIN BmsChargingInfoReading_ChargerState_kBigShortFault
#define _BmsChargingInfoReading_ChargerState_MAX BmsChargingInfoReading_ChargerState_kInvalidChargerState
#define _BmsChargingInfoReading_ChargerState_ARRAYSIZE ((BmsChargingInfoReading_ChargerState)(BmsChargingInfoReading_ChargerState_kInvalidChargerState+1))

typedef enum _BmsChargingInfoReading_ChargeStatus {
    BmsChargingInfoReading_ChargeStatus_kConstantVoltage = 0,
    BmsChargingInfoReading_ChargeStatus_kConstantCurrent = 1,
    BmsChargingInfoReading_ChargeStatus_kIinLimitActive = 2,
    BmsChargingInfoReading_ChargeStatus_kVinLimitActive = 3,
    BmsChargingInfoReading_ChargeStatus_kNotCharging = 4,
    BmsChargingInfoReading_ChargeStatus_kChargingError = 5
} BmsChargingInfoReading_ChargeStatus;
#define _BmsChargingInfoReading_ChargeStatus_MIN BmsChargingInfoReading_ChargeStatus_kConstantVoltage
#define _BmsChargingInfoReading_ChargeStatus_MAX BmsChargingInfoReading_ChargeStatus_kChargingError
#define _BmsChargingInfoReading_ChargeStatus_ARRAYSIZE ((BmsChargingInfoReading_ChargeStatus)(BmsChargingInfoReading_ChargeStatus_kChargingError+1))

/* Struct definitions */
typedef struct _BmsChargingInfoReading {
    BmsChargingInfoReading_SystemStatus system_status;
    BmsChargingInfoReading_ChargerState charger_state;
    BmsChargingInfoReading_ChargeStatus charge_status;
    uint32_t q_count;
    int32_t q_count_delta;
    bool first_charge_complete;
    uint64_t timestamp_ms;
/* @@protoc_insertion_point(struct:BmsChargingInfoReading) */
} BmsChargingInfoReading;

/* Default values for struct fields */
extern const BmsChargingInfoReading_SystemStatus BmsChargingInfoReading_system_status_default;
extern const BmsChargingInfoReading_ChargerState BmsChargingInfoReading_charger_state_default;
extern const BmsChargingInfoReading_ChargeStatus BmsChargingInfoReading_charge_status_default;
extern const uint32_t BmsChargingInfoReading_q_count_default;
extern const int32_t BmsChargingInfoReading_q_count_delta_default;
extern const bool BmsChargingInfoReading_first_charge_complete_default;
extern const uint64_t BmsChargingInfoReading_timestamp_ms_default;

/* Initializer values for message structs */
#define BmsChargingInfoReading_init_default      {BmsChargingInfoReading_SystemStatus_kChargeDisable, BmsChargingInfoReading_ChargerState_kInvalidChargerState, BmsChargingInfoReading_ChargeStatus_kChargingError, 9999u, -9999, false, 0ull}
#define BmsChargingInfoReading_init_zero         {_BmsChargingInfoReading_SystemStatus_MIN, _BmsChargingInfoReading_ChargerState_MIN, _BmsChargingInfoReading_ChargeStatus_MIN, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BmsChargingInfoReading_system_status_tag 1
#define BmsChargingInfoReading_charger_state_tag 2
#define BmsChargingInfoReading_charge_status_tag 3
#define BmsChargingInfoReading_q_count_tag       4
#define BmsChargingInfoReading_q_count_delta_tag 5
#define BmsChargingInfoReading_first_charge_complete_tag 6
#define BmsChargingInfoReading_timestamp_ms_tag  7

/* Struct field encoding specification for nanopb */
extern const pb_field_t BmsChargingInfoReading_fields[8];

/* Maximum encoded size of messages (where known) */
#define BmsChargingInfoReading_size              36

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BMSCHARGINGINFOREADING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

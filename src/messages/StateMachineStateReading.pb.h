/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Sat Sep 22 20:28:34 2018. */

#ifndef PB_STATEMACHINESTATEREADING_PB_H_INCLUDED
#define PB_STATEMACHINESTATEREADING_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _StateMachineStateReading {
    int32_t state;
    uint64_t timestamp_ms;
/* @@protoc_insertion_point(struct:StateMachineStateReading) */
} StateMachineStateReading;

/* Default values for struct fields */
extern const int32_t StateMachineStateReading_state_default;
extern const uint64_t StateMachineStateReading_timestamp_ms_default;

/* Initializer values for message structs */
#define StateMachineStateReading_init_default    {-9999, 0ull}
#define StateMachineStateReading_init_zero       {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define StateMachineStateReading_state_tag       1
#define StateMachineStateReading_timestamp_ms_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t StateMachineStateReading_fields[3];

/* Maximum encoded size of messages (where known) */
#define StateMachineStateReading_size            20

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define STATEMACHINESTATEREADING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

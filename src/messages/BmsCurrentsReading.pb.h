/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Wed Sep 26 22:30:44 2018. */

#ifndef PB_BMSCURRENTSREADING_PB_H_INCLUDED
#define PB_BMSCURRENTSREADING_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _BmsCurrentsReading {
    double battery_current;
    double input_current;
    uint64_t timestamp_ms;
/* @@protoc_insertion_point(struct:BmsCurrentsReading) */
} BmsCurrentsReading;

/* Default values for struct fields */
extern const double BmsCurrentsReading_battery_current_default;
extern const double BmsCurrentsReading_input_current_default;
extern const uint64_t BmsCurrentsReading_timestamp_ms_default;

/* Initializer values for message structs */
#define BmsCurrentsReading_init_default          {-9999, -9999, 0ull}
#define BmsCurrentsReading_init_zero             {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define BmsCurrentsReading_battery_current_tag   1
#define BmsCurrentsReading_input_current_tag     2
#define BmsCurrentsReading_timestamp_ms_tag      3

/* Struct field encoding specification for nanopb */
extern const pb_field_t BmsCurrentsReading_fields[4];

/* Maximum encoded size of messages (where known) */
#define BmsCurrentsReading_size                  27

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define BMSCURRENTSREADING_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Fri Nov 23 20:12:10 2018. */

#ifndef PB_SETICHARGEPAYLOAD_PB_H_INCLUDED
#define PB_SETICHARGEPAYLOAD_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SetIChargePayload {
    uint32_t bms_id;
    uint32_t i_charge_index;
/* @@protoc_insertion_point(struct:SetIChargePayload) */
} SetIChargePayload;

/* Default values for struct fields */
extern const uint32_t SetIChargePayload_bms_id_default;
extern const uint32_t SetIChargePayload_i_charge_index_default;

/* Initializer values for message structs */
#define SetIChargePayload_init_default           {0u, 0u}
#define SetIChargePayload_init_zero              {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SetIChargePayload_bms_id_tag             1
#define SetIChargePayload_i_charge_index_tag     2

/* Struct field encoding specification for nanopb */
extern const pb_field_t SetIChargePayload_fields[3];

/* Maximum encoded size of messages (where known) */
#define SetIChargePayload_size                   10

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SETICHARGEPAYLOAD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

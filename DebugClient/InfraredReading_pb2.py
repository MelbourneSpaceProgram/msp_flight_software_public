# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: InfraredReading.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='InfraredReading.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x15InfraredReading.proto\"\xb2\x01\n\x0fInfraredReading\x12\x12\n\npositive_x\x18\x01 \x02(\x02\x12\x12\n\nnegative_x\x18\x02 \x02(\x02\x12\x12\n\npositive_y\x18\x03 \x02(\x02\x12\x12\n\nnegative_y\x18\x04 \x02(\x02\x12\x14\n\x0cnegative_z_a\x18\x05 \x02(\x02\x12\x14\n\x0cnegative_z_b\x18\x06 \x02(\x02\x12#\n\x1btimestamp_millis_unix_epoch\x18\x07 \x02(\x06')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_INFRAREDREADING = _descriptor.Descriptor(
  name='InfraredReading',
  full_name='InfraredReading',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='positive_x', full_name='InfraredReading.positive_x', index=0,
      number=1, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='negative_x', full_name='InfraredReading.negative_x', index=1,
      number=2, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='positive_y', full_name='InfraredReading.positive_y', index=2,
      number=3, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='negative_y', full_name='InfraredReading.negative_y', index=3,
      number=4, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='negative_z_a', full_name='InfraredReading.negative_z_a', index=4,
      number=5, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='negative_z_b', full_name='InfraredReading.negative_z_b', index=5,
      number=6, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp_millis_unix_epoch', full_name='InfraredReading.timestamp_millis_unix_epoch', index=6,
      number=7, type=6, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=204,
)

DESCRIPTOR.message_types_by_name['InfraredReading'] = _INFRAREDREADING

InfraredReading = _reflection.GeneratedProtocolMessageType('InfraredReading', (_message.Message,), dict(
  DESCRIPTOR = _INFRAREDREADING,
  __module__ = 'InfraredReading_pb2'
  # @@protoc_insertion_point(class_scope:InfraredReading)
  ))
_sym_db.RegisterMessage(InfraredReading)


# @@protoc_insertion_point(module_scope)
